# Copyright (c) 2016, The Linux Foundation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
#    * Neither the name of The Linux Foundation nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

import("//chrome/android/channel.gni")
import("//components/web_refiner/web_refiner_vars.gni")

declare_args() {
  swe_branding_path_component = ""
  swe_resources_zip = []
}

swe_prop_res_dirs = []

# add web refiner
if (defined(web_refiner_resource_dirs)) {
  swe_prop_res_dirs += web_refiner_resource_dirs
}

swe_branding_path_component =  exec_script("//swe/tools/swe_channels_dirs.py",
                [ "--swe-channels", swe_channels, "-d",
                  rebase_path("//", root_build_dir), "--branding-folder"],
                  "string")

swe_branding_path =  exec_script("//swe/tools/swe_channels_dirs.py",
                [ "--swe-channels", swe_channels, "-d",
                  rebase_path("//", root_build_dir), "--branding-file-path"],
                  "string")

swe_extra_dirs = exec_script("//swe/tools/swe_channels_dirs.py",
                [ "--swe-channels", swe_channels, "-d",
                  rebase_path("//", root_build_dir), "--channel-res-folder"],
                  "list lines")

swe_extra_dirs += ["java/res_swe"]

swe_manifest_package =  exec_script("//swe/tools/swe_config.py",
                      [ "-i", rebase_path(swe_branding_path, root_build_dir), "-c", "PACKAGE_NAME"],
                        "string")

swe_version_file =  exec_script("//swe/tools/swe_version.py",
                      [ "-i", rebase_path("//chrome/VERSION", root_build_dir),
                        "-o", rebase_path("//swe/VERSION", root_build_dir),
                        "-l", rebase_path("//build/util/LASTCHANGE", root_build_dir)],
                        "string")

swe_app_manifest_version_code =  exec_script("//swe/tools/swe_version.py",
                      [ "-i", rebase_path("//chrome/VERSION", root_build_dir),
                        "-o", rebase_path("//swe/VERSION", root_build_dir),
                        "--version-code-only"],
                        "string")

swe_app_manifest_version_string =  exec_script("//swe/tools/swe_version.py",
                      [ "-i", rebase_path("//chrome/VERSION", root_build_dir),
                        "-o", rebase_path("//swe/VERSION", root_build_dir),
                        "--version-string-only"],
                        "string")
